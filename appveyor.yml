version: 1.0.{build}

branches:
  only:
    - master

environment:
  matrix:
    - ARCH: x86
      COMPILER: VS2017
      QTDIR: C:\Qt\5.13\msvc2017
      OPENSSLDIR: C:\OpenSSL-v111-Win32

    - ARCH: x64
      COMPILER: VS2017
      QTDIR: C:\Qt\5.13\msvc2017_64
      OPENSSLDIR: C:\OpenSSL-v111-Win64

image:
  - Visual Studio 2017


matrix:
  exclude:
    # Exclude invalid options
    - image: Visual Studio 2017
      COMPILER: GCC

for:
  # Windows
  -
    matrix:
      only:
        - image: Visual Studio 2017

    clone_folder: c:\Build\AsterixRecorder

    cache: C:\mingw-w64\i686-8.1.0-posix-seh-rt_v6-rev0\mingw32

    init:
      - cmd: set VCARCH=%ARCH%
      - cmd: if %ARCH%==x64 set VCARCH=amd64
      - cmd: if %COMPILER%==VS2017 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %VCARCH%
      - cmd: if %COMPILER%==MinGW set CMAKE_GENERATOR="MinGW Makefiles"
      - cmd: if NOT %COMPILER%==MinGW set CMAKE_GENERATOR="NMake Makefiles JOM"
      - cmd: git config --global core.autocrlf input
      - cmd: echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%
      - cmd: echo PROCESSOR_IDENTIFIER=%PROCESSOR_IDENTIFIER%
      - cmd: echo QTDIR=%QTDIR%
      - cmd: echo OPENSSLDIR=%OPENSSLDIR%
      - cmd: echo CMAKE_GENERATOR=%CMAKE_GENERATOR%

    install:
      - ps: $env:package_version = ("$(git describe --tags --always --long)").trim()
      - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
      # Install x86 MingW 8.1.0 if it is not available
      - cmd: if %COMPILER%==MinGW if %ARCH%==x86 if not exist "C:\mingw-w64\i686-8.1.0-posix-seh-rt_v6-rev0" md C:\mingw-w64\i686-8.1.0-posix-seh-rt_v6-rev0
      - cmd: if %COMPILER%==MinGW if %ARCH%==x86 cd C:\mingw-w64\i686-8.1.0-posix-seh-rt_v6-rev0
      - cmd: if %COMPILER%==MinGW if %ARCH%==x86 dir
      - cmd: if %COMPILER%==MinGW if %ARCH%==x86 if not exist "mingw32" appveyor-retry appveyor DownloadFile "http://downloads.sourceforge.net/mingw-w64/i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z" -FileName "mingw32.7z"
      - cmd: if %COMPILER%==MinGW if %ARCH%==x86 if exist "mingw32.7z" 7z x -y "mingw32.7z" > nul

    before_build:
      - cmd: set PATH=%QTDIR%\bin;C:\Qt\Tools\QtCreator\bin;%PATH%
      - cmd: if %COMPILER%==MinGW set PATH=%MINGWDIR%\bin;%PATH:C:\Program Files\Git\usr\bin;=%
      - cmd: echo PATH=%PATH%

    build_script:
      - cmd: cd c:\Build\AsterixRecorder
      - cmd: md winbuild
      - cmd: cd winbuild
      - cmd: cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -G %CMAKE_GENERATOR% "-DCMAKE_PREFIX_PATH=%QTDIR%" "-DOPENSSL_ROOT_DIR=%OPENSSLDIR%"
      - cmd: cmake --build . -j %NUMBER_OF_PROCESSORS%
      - cmd: cpack

 
    artifacts:
      - path: winbuild\asterixRecorder-*-Windows-$(ARCH).exe
        name: AsterixRecorder Installer

      - path: winbuild\asterixRecorder-*-Windows-$(ARCH).zip
        name: AsterixRecorder ZIP

      - path: winbuild\asterixRecorder-*-Windows-$(ARCH).*.sha256
        name: AsterixRecorder Checksums
